// <auto-generated />
using System;
using Exadel.OfficeBooking.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exadel.OfficeBooking.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220323192209_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Bookings.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookingType")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ParkingPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecurringWeekDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkplaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParkingPlaceId")
                        .IsUnique()
                        .HasFilter("[ParkingPlaceId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Map", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsKitchenPresent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMeetingRoomPresent")
                        .HasColumnType("bit");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06468b94-d46e-4219-9d9f-e97ce4e0480c"),
                            FloorNumber = 1,
                            IsKitchenPresent = true,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("888f4fef-0b4c-4bcf-94a8-b8d639510a12")
                        },
                        new
                        {
                            Id = new Guid("7924687e-3da2-4417-9eb4-9c3188ce71fb"),
                            FloorNumber = 2,
                            IsKitchenPresent = false,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("888f4fef-0b4c-4bcf-94a8-b8d639510a12")
                        },
                        new
                        {
                            Id = new Guid("4b00d312-f54b-49a4-96aa-2d3857c59e11"),
                            FloorNumber = 3,
                            IsKitchenPresent = true,
                            IsMeetingRoomPresent = false,
                            OfficeId = new Guid("888f4fef-0b4c-4bcf-94a8-b8d639510a12")
                        },
                        new
                        {
                            Id = new Guid("757520cf-a9ad-4e25-939f-df08ddd1459f"),
                            FloorNumber = 7,
                            IsKitchenPresent = true,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("18d792cf-b653-4a79-b0c8-ae5d44b63ea4")
                        },
                        new
                        {
                            Id = new Guid("acffb182-439a-424b-a500-30568344aacf"),
                            FloorNumber = 8,
                            IsKitchenPresent = false,
                            IsMeetingRoomPresent = false,
                            OfficeId = new Guid("18d792cf-b653-4a79-b0c8-ae5d44b63ea4")
                        },
                        new
                        {
                            Id = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            FloorNumber = 3,
                            IsKitchenPresent = true,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f")
                        },
                        new
                        {
                            Id = new Guid("756aceda-ccbe-4c0c-8337-b0dc5582185a"),
                            FloorNumber = 4,
                            IsKitchenPresent = true,
                            IsMeetingRoomPresent = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f")
                        },
                        new
                        {
                            Id = new Guid("591810fe-d2cc-4b17-876b-9e4586951d8c"),
                            FloorNumber = 5,
                            IsKitchenPresent = false,
                            IsMeetingRoomPresent = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f")
                        },
                        new
                        {
                            Id = new Guid("be4f04ce-5a69-4aef-afcf-8748c016e8f2"),
                            FloorNumber = 6,
                            IsKitchenPresent = false,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f")
                        },
                        new
                        {
                            Id = new Guid("11acaa7b-97d5-424a-8290-f184d9b14577"),
                            FloorNumber = 1,
                            IsKitchenPresent = false,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("1d426867-997d-4aa8-a6ff-90c639e0a2d9")
                        },
                        new
                        {
                            Id = new Guid("159bf96f-9d4d-44b1-b7b9-5918d8186ddd"),
                            FloorNumber = 9,
                            IsKitchenPresent = true,
                            IsMeetingRoomPresent = true,
                            OfficeId = new Guid("83ea853c-771b-4fe7-bd21-135ee936145e")
                        });
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Office", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsFreeParkingAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("888f4fef-0b4c-4bcf-94a8-b8d639510a12"),
                            Address = "Ilo Mosashvili str #24",
                            City = "Tbilisi",
                            Country = "Georgia",
                            IsFreeParkingAvailable = false,
                            Name = "IM24"
                        },
                        new
                        {
                            Id = new Guid("18d792cf-b653-4a79-b0c8-ae5d44b63ea4"),
                            Address = "Mirzo Ulugbek Avenue # 73",
                            City = "Tashkent",
                            Country = "Uzbekistan",
                            IsFreeParkingAvailable = true,
                            Name = "MU73"
                        },
                        new
                        {
                            Id = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f"),
                            Address = "Naturalistov str # 3",
                            City = "Minsk",
                            Country = "Belarus",
                            IsFreeParkingAvailable = true,
                            Name = "N3"
                        },
                        new
                        {
                            Id = new Guid("1d426867-997d-4aa8-a6ff-90c639e0a2d9"),
                            Address = "Solnechnaya str # 59",
                            City = "Minsk",
                            Country = "Belarus",
                            IsFreeParkingAvailable = false,
                            Name = "S59"
                        },
                        new
                        {
                            Id = new Guid("83ea853c-771b-4fe7-bd21-135ee936145e"),
                            Address = "Yaroslaviv Val # 15",
                            City = "Odessa",
                            Country = "Ukraine",
                            IsFreeParkingAvailable = true,
                            Name = "YV15"
                        });
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.ParkingPlace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlaceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("ParkingPlaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("927d860a-2c84-44c9-b0d3-873ce8f36462"),
                            IsBooked = false,
                            OfficeId = new Guid("18d792cf-b653-4a79-b0c8-ae5d44b63ea4"),
                            PlaceNumber = 15
                        },
                        new
                        {
                            Id = new Guid("1465be2a-8be6-4f61-8ebc-5eed7541ea77"),
                            IsBooked = false,
                            OfficeId = new Guid("18d792cf-b653-4a79-b0c8-ae5d44b63ea4"),
                            PlaceNumber = 16
                        },
                        new
                        {
                            Id = new Guid("d3cb25a9-c136-417d-bfc9-5abd56ae97c7"),
                            IsBooked = false,
                            OfficeId = new Guid("18d792cf-b653-4a79-b0c8-ae5d44b63ea4"),
                            PlaceNumber = 17
                        },
                        new
                        {
                            Id = new Guid("d2fb7ffe-51e6-4dc8-a908-220a9aa12c50"),
                            IsBooked = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f"),
                            PlaceNumber = 1
                        },
                        new
                        {
                            Id = new Guid("46c4ec48-71eb-4a5c-b2a4-9150c4017d81"),
                            IsBooked = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f"),
                            PlaceNumber = 2
                        },
                        new
                        {
                            Id = new Guid("0d1b9bfc-7cee-4900-9a67-ad80937c11b3"),
                            IsBooked = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f"),
                            PlaceNumber = 3
                        },
                        new
                        {
                            Id = new Guid("bc8b5bd4-9768-4bfc-b06f-bcec9b98103b"),
                            IsBooked = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f"),
                            PlaceNumber = 4
                        },
                        new
                        {
                            Id = new Guid("e9acbefc-6dc8-45f9-ac22-4222186f5c72"),
                            IsBooked = false,
                            OfficeId = new Guid("162c0201-b688-40a2-9a76-31c4d05e226f"),
                            PlaceNumber = 5
                        },
                        new
                        {
                            Id = new Guid("17d42c15-fa7e-4e07-b708-8fda8e2a1ee4"),
                            IsBooked = false,
                            OfficeId = new Guid("83ea853c-771b-4fe7-bd21-135ee936145e"),
                            PlaceNumber = 90
                        });
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Workplace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasHeadset")
                        .HasColumnType("bit");

                    b.Property<bool>("HasKeyboard")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMonitor")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMouse")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNextToWindow")
                        .HasColumnType("bit");

                    b.Property<Guid>("MapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("Workplaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba49af18-c6a9-449c-852e-2e39a9aaacf0"),
                            HasHeadset = true,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("06468b94-d46e-4219-9d9f-e97ce4e0480c"),
                            Name = "1",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ca157299-7037-4c3d-af5b-cb90426e7270"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("06468b94-d46e-4219-9d9f-e97ce4e0480c"),
                            Name = "2",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("182f8693-302f-413f-9767-f5bf532f26a5"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = false,
                            MapId = new Guid("06468b94-d46e-4219-9d9f-e97ce4e0480c"),
                            Name = "3",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("1218ae0d-e00d-43e5-a2bc-3b512209f1a1"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("757520cf-a9ad-4e25-939f-df08ddd1459f"),
                            Name = "77",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ece9bae9-ecba-4a47-8f44-1d0fb3552687"),
                            HasHeadset = false,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "301",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("5fcfb0f1-aa49-4817-9d28-17d70fe13d2c"),
                            HasHeadset = true,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = false,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "302",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("91e8efd0-c944-4613-b896-548f7f64df3a"),
                            HasHeadset = true,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = false,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "303",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a01036d3-fdbe-4f0f-b91c-3d916d752de3"),
                            HasHeadset = false,
                            HasKeyboard = false,
                            HasMonitor = true,
                            HasMouse = false,
                            HasPC = false,
                            IsNextToWindow = true,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "304",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("5c5f4919-55d5-4983-b777-f07f95cacbf3"),
                            HasHeadset = true,
                            HasKeyboard = false,
                            HasMonitor = true,
                            HasMouse = true,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "305",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("06f2eec8-3470-4182-bff1-45739a49757a"),
                            HasHeadset = false,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "306",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("1b8b316f-5fdc-4c40-8d80-cde8449dff37"),
                            HasHeadset = false,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "307",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("5607563e-3d8c-4c44-90eb-c32c5c6956a1"),
                            HasHeadset = true,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = true,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("52858652-e6fe-48ef-b6a2-6d85f972dbee"),
                            Name = "333",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ef5284f2-771d-44ba-9469-40243b7ef009"),
                            HasHeadset = true,
                            HasKeyboard = false,
                            HasMonitor = true,
                            HasMouse = false,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("756aceda-ccbe-4c0c-8337-b0dc5582185a"),
                            Name = "401",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("91179d2a-cd11-40b2-879d-792c006b04fe"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = false,
                            MapId = new Guid("756aceda-ccbe-4c0c-8337-b0dc5582185a"),
                            Name = "402",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ed7e5cf4-6db0-44d1-887f-40af33259e88"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = false,
                            MapId = new Guid("756aceda-ccbe-4c0c-8337-b0dc5582185a"),
                            Name = "403",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("952e4d5a-3400-42da-875d-da2b8234c928"),
                            HasHeadset = true,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = true,
                            HasPC = false,
                            IsNextToWindow = true,
                            MapId = new Guid("756aceda-ccbe-4c0c-8337-b0dc5582185a"),
                            Name = "404",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("cd29debf-565b-45e3-b5d5-a004168ebbd7"),
                            HasHeadset = true,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = false,
                            MapId = new Guid("756aceda-ccbe-4c0c-8337-b0dc5582185a"),
                            Name = "405",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("70b06743-b8f1-4571-a68c-bd08937e3ee9"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = false,
                            MapId = new Guid("591810fe-d2cc-4b17-876b-9e4586951d8c"),
                            Name = "501",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("052141cc-73db-46f4-a901-fa6a413b6567"),
                            HasHeadset = true,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = true,
                            HasPC = false,
                            IsNextToWindow = true,
                            MapId = new Guid("591810fe-d2cc-4b17-876b-9e4586951d8c"),
                            Name = "502",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("28db1086-163e-403a-aae1-b53dc84d54be"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = true,
                            HasMouse = true,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("be4f04ce-5a69-4aef-afcf-8748c016e8f2"),
                            Name = "601",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("42600a58-4b1d-4a56-8970-f7fa1c6e577d"),
                            HasHeadset = false,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = false,
                            IsNextToWindow = false,
                            MapId = new Guid("be4f04ce-5a69-4aef-afcf-8748c016e8f2"),
                            Name = "602",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("82c5d336-df53-40a3-8c4d-56141cb5238f"),
                            HasHeadset = true,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("be4f04ce-5a69-4aef-afcf-8748c016e8f2"),
                            Name = "603",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("511b67e3-f1ee-4e69-b2f5-5cd9f78de703"),
                            HasHeadset = true,
                            HasKeyboard = false,
                            HasMonitor = false,
                            HasMouse = true,
                            HasPC = false,
                            IsNextToWindow = true,
                            MapId = new Guid("11acaa7b-97d5-424a-8290-f184d9b14577"),
                            Name = "101",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("70704092-b3e1-4384-a50f-c348634ac029"),
                            HasHeadset = false,
                            HasKeyboard = true,
                            HasMonitor = false,
                            HasMouse = false,
                            HasPC = true,
                            IsNextToWindow = true,
                            MapId = new Guid("159bf96f-9d4d-44b1-b7b9-5918d8186ddd"),
                            Name = "SU",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Person.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EmploymentEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmploymentStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("PreferredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PreferredId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35f72da2-4747-4a17-ade1-e0056ded53e4"),
                            Email = "majidovanvar30.11.2002@gmail.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3237),
                            FirstName = "Anvarjon",
                            LastName = "Majidov",
                            Role = 3,
                            TelegramId = 534430877L
                        },
                        new
                        {
                            Id = new Guid("eb0c6e21-4b2e-4766-b17a-ce28b190b074"),
                            Email = "kdavletov@exadel.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3253),
                            FirstName = "Khamza",
                            LastName = "Davletov",
                            Role = 3,
                            TelegramId = 194740354L
                        },
                        new
                        {
                            Id = new Guid("051f2005-9dd2-49b0-874b-d86046ba198a"),
                            Email = "anvarkhon.khamzaev@gmail.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3255),
                            FirstName = "Anvarkhon",
                            LastName = "Khamzaev",
                            Role = 3,
                            TelegramId = 112046934L
                        },
                        new
                        {
                            Id = new Guid("cfd380e5-7e37-42de-8f4a-27a0bf9cc24d"),
                            Email = "apfpo2001@gmail.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3256),
                            FirstName = "Polina",
                            LastName = "",
                            Role = 2,
                            TelegramId = 635524939L
                        },
                        new
                        {
                            Id = new Guid("2485a7ae-4011-4664-b13b-16dfa6ba812a"),
                            Email = "malkou.vasili@gmail.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3258),
                            FirstName = "Vasili",
                            LastName = "",
                            Role = 2,
                            TelegramId = 957365793L
                        },
                        new
                        {
                            Id = new Guid("83949cc3-b49b-4398-a669-a11130bfb98b"),
                            Email = "asgoreglyad@gmail.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3262),
                            FirstName = "Andrei",
                            LastName = "Harahliad",
                            Role = 3,
                            TelegramId = 1651658270L
                        },
                        new
                        {
                            Id = new Guid("ace4e49a-3d3b-46eb-b88c-477843543210"),
                            Email = "sherashera777@gmail.com",
                            EmploymentStart = new DateTime(2022, 3, 23, 22, 22, 9, 131, DateTimeKind.Local).AddTicks(3263),
                            FirstName = "Sandro",
                            LastName = "Sherazadishvili",
                            Role = 3,
                            TelegramId = 5046701077L
                        });
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Person.Vacation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VacationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VacationStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Bookings.Booking", b =>
                {
                    b.HasOne("Exadel.OfficeBooking.Domain.OfficePlan.ParkingPlace", "ParkingPlace")
                        .WithOne("Booking")
                        .HasForeignKey("Exadel.OfficeBooking.Domain.Bookings.Booking", "ParkingPlaceId");

                    b.HasOne("Exadel.OfficeBooking.Domain.Person.User", "User")
                        .WithMany("BookingList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exadel.OfficeBooking.Domain.OfficePlan.Workplace", "Workplace")
                        .WithMany("Bookings")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingPlace");

                    b.Navigation("User");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Map", b =>
                {
                    b.HasOne("Exadel.OfficeBooking.Domain.OfficePlan.Office", "Office")
                        .WithMany("Maps")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.ParkingPlace", b =>
                {
                    b.HasOne("Exadel.OfficeBooking.Domain.OfficePlan.Office", "Office")
                        .WithMany("ParkingPlaces")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Workplace", b =>
                {
                    b.HasOne("Exadel.OfficeBooking.Domain.OfficePlan.Map", "Map")
                        .WithMany("Workspaces")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Person.User", b =>
                {
                    b.HasOne("Exadel.OfficeBooking.Domain.OfficePlan.Workplace", "Preferred")
                        .WithMany()
                        .HasForeignKey("PreferredId");

                    b.Navigation("Preferred");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Person.Vacation", b =>
                {
                    b.HasOne("Exadel.OfficeBooking.Domain.Person.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Map", b =>
                {
                    b.Navigation("Workspaces");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Office", b =>
                {
                    b.Navigation("Maps");

                    b.Navigation("ParkingPlaces");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.ParkingPlace", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.OfficePlan.Workplace", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Exadel.OfficeBooking.Domain.Person.User", b =>
                {
                    b.Navigation("BookingList");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
